makeplotgroup(a,d,t,groups)
}
source('groupplotsummary.R')
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
View(Com.Sp.mean)
View(Com.Sp.Agg.groups)
View(Com.Sp.groups)
View(Com.Sp.groups.mean)
#group parameters ----
beta= -0.25
k = 5
d <- vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)
tbeta <- d %>% flexbeta(beta= beta)
tward <- agnes(d, method = 'ward') %>% as.hclust()
t=tbeta
t=tward
t=dendsort(t)
# dk <- dynamicK(t, d)
# dkward <- dynamicK(tward, d)
# groups <- cutree(t, k = k)
# maxCoreScatter <- dk[dk$nclust %in% k,]$maxcor
# minGap <- (1 - maxCoreScatter) * 3/4
# dyngroups <-
#   cutreeDynamic(t, minClusterSize=1, method = 'hybrid', distM=as.matrix(d),deepSplit=1, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
# groups=dyngroups
groups <- cutree(t, k = k)
groups <- grouporder(t, groups)
# grouporder <- function(t,groups){
# soilplot <- names(d)
# clust <- unname(groups)
# groupdf <- as.data.frame(cbind(soilplot, clust))
# groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
# torder <- as.data.frame(cbind(trow=t$order))
# torder$torder <- row(torder)[,1]
# newlabels <- as.data.frame(cbind(labels=t$labels))
# newlabels$trow <- row(newlabels)[,1]
# newlabels <- merge(newlabels, groupdf, by.x='labels', by.y ='soilplot')
# newlabels <- merge(newlabels, torder, by='trow')
#
# grouporder <- newlabels %>% group_by(clust)  %>%  summarise(thisorder = min(torder))
# grouporder$newgroup <- order(order(grouporder$thisorder))
# newlabels <- merge(newlabels, grouporder, by='clust')
# newgroups <- newlabels$newgroup
# names(newgroups) <- newlabels$labels
# return(newgroups)
# }
# newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
# newlabels <- newlabels[order(newlabels$row),1]
# newtree <- t
# newtree$labels <- newlabels
if (T){
a <- 'flex'
makeplot(a,d,tbeta,k)
}
if (T){
a <- 'ward'
makeplot(a,d,tward,k)
}
if (T){
a <- 'regroup'
makeplotgroup(a,d,t,groups)
}
source('groupplotsummary.R')
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
beta= -0.25
k = 4
d <- vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)
tbeta <- d %>% flexbeta(beta= beta)
tward <- agnes(d, method = 'ward') %>% as.hclust()
t=tbeta
t=tward
t=dendsort(t)
# dk <- dynamicK(t, d)
# dkward <- dynamicK(tward, d)
# groups <- cutree(t, k = k)
# maxCoreScatter <- dk[dk$nclust %in% k,]$maxcor
# minGap <- (1 - maxCoreScatter) * 3/4
# dyngroups <-
#   cutreeDynamic(t, minClusterSize=1, method = 'hybrid', distM=as.matrix(d),deepSplit=1, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
# groups=dyngroups
groups <- cutree(t, k = k)
groups <- grouporder(t, groups)
# grouporder <- function(t,groups){
# soilplot <- names(d)
# clust <- unname(groups)
# groupdf <- as.data.frame(cbind(soilplot, clust))
# groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
# torder <- as.data.frame(cbind(trow=t$order))
# torder$torder <- row(torder)[,1]
# newlabels <- as.data.frame(cbind(labels=t$labels))
# newlabels$trow <- row(newlabels)[,1]
# newlabels <- merge(newlabels, groupdf, by.x='labels', by.y ='soilplot')
# newlabels <- merge(newlabels, torder, by='trow')
#
# grouporder <- newlabels %>% group_by(clust)  %>%  summarise(thisorder = min(torder))
# grouporder$newgroup <- order(order(grouporder$thisorder))
# newlabels <- merge(newlabels, grouporder, by='clust')
# newgroups <- newlabels$newgroup
# names(newgroups) <- newlabels$labels
# return(newgroups)
# }
# newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
# newlabels <- newlabels[order(newlabels$row),1]
# newtree <- t
# newtree$labels <- newlabels
if (T){
a <- 'flex'
makeplot(a,d,tbeta,k)
}
if (T){
a <- 'ward'
makeplot(a,d,tward,k)
}
if (T){
a <- 'regroup'
makeplotgroup(a,d,t,groups)
}
source('groupplotsummary.R')
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
betasim <- function(p){
d <- matrix(1, nrow = nrow(p), ncol = nrow(p))
rownames(d) <- rownames(p)
colnames(d) <- rownames(p)
for(j in 1:nrow(p)){
for(k in 1:nrow(p)){
d[j,k] <- 1-sum((p[j,]*p[k,])^0.5)/sqrt(sum(p[j,])*sum(p[k,]))
}}
d<-as.dist(d)
}
ecoregion <-  read.delim('data/USNVC/d_usfs_ecoregion2007.txt', encoding = 'UTF-8', na.strings = '', stringsAsFactors=FALSE)
vegecoregion <-  read.delim('data/USNVC/UnitXEcoregionUsfs2007.txt', encoding = 'UTF-8', na.strings = '', stringsAsFactors=FALSE)
vegecoregion <- merge(vegecoregion, ecoregion, by='usfs_ecoregion_2007_id')
unit <-  read.delim('data/USNVC/unit.txt', encoding = 'UTF-8', na.strings = '', stringsAsFactors=FALSE)
states <-read.delim('data/USNVC/d_subnation.txt')
vegstates <-read.delim('data/USNVC/UnitXSubnation.txt')
vegstates <- merge(vegstates, states, by='subnation_id')
USNVClist <- readRDS('data/USNVC/USNVClist.RDS')
USNVClist <- subset(USNVClist, !grepl('\\.', acctaxon))
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\)', '.')
groupdf
plotgroup <- merge(groupdf, plotdata, by='soilplot')
library(stringr)
library(BiodiversityR)
library(cluster)
library(ape)
library(dendextend)
library(dplyr)
library(dynamicTreeCut)
library(rpart)
library(rpart.plot)
library(goeveg)
library(proxy)
library(isopam)
plotgroup <- merge(groupdf, plotdata, by='soilplot')
plotgroup
groups <- cutree(t, k = k)
#Get species importance by cluster
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
plotgroup <- merge(groupdf, plotdata, by='soilplot')
View(groupdf)
View(plotdata)
plotdata <- readRDS('data/Com.Sp.mean.RDS')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\)', '.')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\(', '.')
View(plotdata)
View(Com.Sp.groups.mean)
plotdata <- readRDS('data/Com.Sp.mean.RDS')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\)', '.')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\(', '.')
#plotdata <- subset(plotdata, !Observation_Label %in% c('S12062901', 'W14090801'))
if(F){plotdata$over <- 100*(1-10^(apply(log10(1-(plotdata[,c('Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
plotdata.summary <- aggregate(
list(Trees = log10(1-(plotdata[,c('over')]/100.001)),
Shrubs = log10(1-(plotdata[,c('Shrub')]/100.001)),
Field = log10(1-(plotdata[,c('Field')]/100.001))),
by= list(Observation_ID = plotdata$Observation_ID), FUN='sum')
plotdata.summary[,c('Trees','Shrubs','Field')] <- 100*(1-10^plotdata.summary[,c('Trees','Shrubs','Field')])
Woodland <-  subset(plotdata.summary, Trees >= 25)$Observation_ID
Shrubland <-  subset(plotdata.summary, Trees < 10 & Shrubs >= 25)$Observation_ID
Grassland <-  subset(plotdata.summary, Trees < 10 & Shrubs < 10 & Field >= 25)$Observation_ID
plotdata[plotdata$Observation_ID %in% Woodland,c('Field', 'Shrub')] <-
plotdata[plotdata$Observation_ID %in% Woodland,c('Field', 'Shrub')]/100
plotdata[plotdata$Observation_ID %in% Shrubland,c('Field', 'Subcanopy', 'Tree')] <-
plotdata[plotdata$Observation_ID %in% Shrubland,c('Field', 'Subcanopy', 'Tree')]/100
plotdata[plotdata$Observation_ID %in% Grassland,c('Shrub', 'Subcanopy', 'Tree')] <-
plotdata[plotdata$Observation_ID %in% Grassland,c('Shrub', 'Subcanopy', 'Tree')]/100
plotdata$sqrttotal <- (100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum'))))^0.5
}
plotdata$logtotal <- (log10(100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum'))))+2)
plotmatrix <- makecommunitydataset(plotdata, row = 'soilplot', column = 'Species', value = 'logtotal', drop = TRUE)
plotgroup <- merge(groupdf, plotdata, by='soilplot')
plotgroupsum <- aggregate(plotgroup$Total, by=list(clust = plotgroup$clust, Species = plotgroup$Species), FUN='sum')
names(plotgroupsum)[names(plotgroupsum)=='x'] <-'sum'
plotgroupmax <- aggregate(plotgroupsum$sum, by=list(clust = plotgroupsum$clust), FUN='max')
names(plotgroupmax)[names(plotgroupmax)=='x'] <-'max'
plotgroupsum <- merge(plotgroupsum, plotgroupmax, by='clust')
plotgroupsum$Imp <- plotgroupsum$sum/plotgroupsum$max
View(plotgroupsum)
View(Com.Sp.groups.mean)
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, Totalfreqcover))
plotgroupsum <- aggregate(list(sum = plotgroup$Totalfreqcover), by=list(clust = plotgroup$cluster, Species = plotgroup$taxon), FUN='sum')
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, Totalfreqcover))
plotgroupsum <- aggregate(list(sum = plotgroup$Totalfreqcover), by=list(clust = plotgroup$cluster, Species = plotgroup$taxon), FUN='sum')
plotgroupsum <- plotgroupsum %>% group_by(clust) %>% mutate(max = max(sum))
View(plotgroupsum)
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, Totalfreqcover))
plotgroupsum <- aggregate(list(sum = plotgroup$Totalfreqcover), by=list(clust = plotgroup$cluster, Species = plotgroup$taxon), FUN='sum')
plotgroupsum <- plotgroupsum %>% group_by(clust) %>% mutate(max = max(sum), Imp = sum/max)
View(plotgroupsum)
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, Totalfreqcover))
plotgroupsum <- plotgroup %>% group_by(clust, taxon) %>% summarise(sum = sum(taxon))
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, Totalfreqcover))
plotgroupsum <- plotgroup %>% group_by(cluster, taxon) %>% summarise(sum = sum(taxon))
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, Totalfreqcover))
plotgroupsum <- plotgroup %>% group_by(cluster, taxon) %>% summarise(sum = sum(Totalfreqcover))
View(plotgroupsum)
plotgroupsum <- plotgroupsum %>% group_by(cluster) %>% mutate(max = max(sum), Imp = sum/max)
View(plotgroupsum)
View(plotgroup)
View(Com.Sp.groups.mean)
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, freqcover))
plotgroupsum <- plotgroup %>% group_by(cluster, taxon) %>% summarise(sum = sum(freqcover))
plotgroupsum <- plotgroupsum %>% group_by(cluster) %>% mutate(max = max(sum), Imp = sum/max)
View(plotgroupsum)
states <- c('MI','IN','OH')
core <- c('MI')
ecoregion <- c('222')
level <- 'Association'
level <- unique(unit[unit$hierarchylevel %in% level,'element_global_id'])
states <- unique(vegstates[vegstates$subnation_code %in% states,'element_global_id'])
core <- unique(vegstates[vegstates$subnation_code %in% core,'element_global_id'])
ecoregion <- unique(vegecoregion[vegecoregion$usfs_ecoregion_2007_concat_cd %in% ecoregion,'element_global_id'])
plotassociations <- as.data.frame(lapply(as.data.frame(cbind(clust = 'x', 'element_global_id'=0, 'scientificname'='x')), as.character), stringsAsFactors=FALSE)
i=1
g <- subset(plotgroupsum, cluster %in% i)
g$Imp <- g$Imp^1 #aggregate data should not be square rooted
gtotal <- sum(g$Imp)
vegtotal <- aggregate(USNVClist$x, by=list(element_global_id = USNVClist$element_global_id, scientificname = USNVClist$scientificname), FUN='sum')
names(vegtotal)[names(vegtotal)=='x'] <-'vegtotal'
gmerge <- merge(g, USNVClist, by.x = 'Species', by.y = 'acctaxon')
g
gmerge <- merge(g, USNVClist, by.x = 'taxon', by.y = 'acctaxon')
gmerge$intersect <- (gmerge$Imp*gmerge$x)^0.5
gintersect <- aggregate(gmerge$intersect, by=list(element_global_id = gmerge$element_global_id, scientificname =
gmerge$scientificname), FUN='sum')
names(gintersect)[names(gintersect)=='x'] <-'intersect'
g <- merge(gintersect, vegtotal, by=c('element_global_id', 'scientificname'))
g$affinity <- g$intersect/(g$vegtotal*gtotal)^0.5*100
g$state <- 'no'
if(nrow(g[g$element_global_id %in% states,])>0){
g[g$element_global_id %in% states,]$state <- 'near'}
if(nrow(g[g$element_global_id %in% core,])>0){
g[g$element_global_id %in% core,]$state <- 'yes'}
g$ecoregion <- 'no'
if(nrow(g[g$element_global_id %in% ecoregion,])>0){
g[g$element_global_id %in% ecoregion,]$ecoregion <- 'yes'}
g$level <- 'no'
g[g$element_global_id %in% level,]$level <- 'yes'
g <- subset(g, level == 'yes')
g$best <- g$affinity
g[g$ecoregion == 'no',]$best <- g[g$ecoregion == 'no',]$best*0.75
g[g$element_global_id %in% states,]$best <- g[g$element_global_id %in% states,]$best*1/0.75
g[g$element_global_id %in% core,]$best <- g[g$element_global_id %in% core,]$best*1/0.75
g$best <- g$best/max(g$best)*100
g <- g[,!colnames(g)%in% c('intersect','vegtotal')]
rm(gmerge, vegtotal, gintersect)
g <- subset(g, best >= 0 & level == 'yes')# & state == 'yes')
g <- g[order(g$best, decreasing = TRUE),]
plotassociations1 <- as.data.frame(lapply(as.data.frame(cbind(clust = i,g[1,1:2])), as.character), stringsAsFactors=FALSE)
plotgroup <- subset(Com.Sp.groups.mean, select=c(cluster, taxon, freqcover))
plotgroupsum <- plotgroup %>% group_by(cluster, taxon) %>% summarise(sum = sum(freqcover))
plotgroupsum <- plotgroupsum %>% group_by(cluster) %>% mutate(max = max(sum), Imp = sum/max)
states <- c('MI','IN','OH')
core <- c('MI')
ecoregion <- c('222')
level <- 'Association'
level <- unique(unit[unit$hierarchylevel %in% level,'element_global_id'])
states <- unique(vegstates[vegstates$subnation_code %in% states,'element_global_id'])
core <- unique(vegstates[vegstates$subnation_code %in% core,'element_global_id'])
ecoregion <- unique(vegecoregion[vegecoregion$usfs_ecoregion_2007_concat_cd %in% ecoregion,'element_global_id'])
plotassociations <- as.data.frame(lapply(as.data.frame(cbind(clust = 'x', 'element_global_id'=0, 'scientificname'='x')), as.character), stringsAsFactors=FALSE)
for(i in 1:k){ #i=1
g <- subset(plotgroupsum, cluster %in% i)
g$Imp <- g$Imp^1 #aggregate data should not be square rooted
gtotal <- sum(g$Imp)
vegtotal <- aggregate(USNVClist$x, by=list(element_global_id = USNVClist$element_global_id, scientificname = USNVClist$scientificname), FUN='sum')
names(vegtotal)[names(vegtotal)=='x'] <-'vegtotal'
gmerge <- merge(g, USNVClist, by.x = 'taxon', by.y = 'acctaxon')
gmerge$intersect <- (gmerge$Imp*gmerge$x)^0.5
gintersect <- aggregate(gmerge$intersect, by=list(element_global_id = gmerge$element_global_id, scientificname = gmerge$scientificname), FUN='sum')
names(gintersect)[names(gintersect)=='x'] <-'intersect'
g <- merge(gintersect, vegtotal, by=c('element_global_id', 'scientificname'))
g$affinity <- g$intersect/(g$vegtotal*gtotal)^0.5*100
g$state <- 'no'
if(nrow(g[g$element_global_id %in% states,])>0){
g[g$element_global_id %in% states,]$state <- 'near'}
if(nrow(g[g$element_global_id %in% core,])>0){
g[g$element_global_id %in% core,]$state <- 'yes'}
g$ecoregion <- 'no'
if(nrow(g[g$element_global_id %in% ecoregion,])>0){
g[g$element_global_id %in% ecoregion,]$ecoregion <- 'yes'}
g$level <- 'no'
g[g$element_global_id %in% level,]$level <- 'yes'
g <- subset(g, level == 'yes')
g$best <- g$affinity
g[g$ecoregion == 'no',]$best <- g[g$ecoregion == 'no',]$best*0.75
g[g$element_global_id %in% states,]$best <- g[g$element_global_id %in% states,]$best*1/0.75
g[g$element_global_id %in% core,]$best <- g[g$element_global_id %in% core,]$best*1/0.75
g$best <- g$best/max(g$best)*100
g <- g[,!colnames(g)%in% c('intersect','vegtotal')]
rm(gmerge, vegtotal, gintersect)
g <- subset(g, best >= 0 & level == 'yes')# & state == 'yes')
g <- g[order(g$best, decreasing = TRUE),]
plotassociations1 <- as.data.frame(lapply(as.data.frame(cbind(clust = i,g[1,1:2])), as.character), stringsAsFactors=FALSE)
plotassociations <- rbind(plotassociations,plotassociations1)
}
rm(plotassociations1)
plotassociations <- plotassociations[-1,]
View(plotassociations)
source('USNVC_compare_specieslists_loop_by_cluster.R')
plotassociations
#group parameters ----
beta= -0.25
k = 9
d <- vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)
library(soilDB)
library(aqp)#load before dplyr
library(stringr)
library(BiodiversityR)
library(cluster)
library(ape)
library(dendextend)
library(dplyr)
library(dynamicTreeCut)
library(rpart)
library(rpart.plot)
library(goeveg)
library(proxy)
library(foreign)
library(optpart)
library(dendsort)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load Veg tables ----
source('processplot.R')
#load clustering functions ----
source('clusterfunctions.R')
#group parameters ----
beta= -0.25
k = 9
d <- vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)
tbeta <- d %>% flexbeta(beta= beta)
tward <- agnes(d, method = 'ward') %>% as.hclust()
t=tbeta
t=tward
t=dendsort(t)
# dk <- dynamicK(t, d)
# dkward <- dynamicK(tward, d)
# groups <- cutree(t, k = k)
# maxCoreScatter <- dk[dk$nclust %in% k,]$maxcor
# minGap <- (1 - maxCoreScatter) * 3/4
# dyngroups <-
#   cutreeDynamic(t, minClusterSize=1, method = 'hybrid', distM=as.matrix(d),deepSplit=1, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
# groups=dyngroups
groups <- cutree(t, k = k)
groups <- grouporder(t, groups)
# grouporder <- function(t,groups){
# soilplot <- names(d)
# clust <- unname(groups)
# groupdf <- as.data.frame(cbind(soilplot, clust))
# groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
# torder <- as.data.frame(cbind(trow=t$order))
# torder$torder <- row(torder)[,1]
# newlabels <- as.data.frame(cbind(labels=t$labels))
# newlabels$trow <- row(newlabels)[,1]
# newlabels <- merge(newlabels, groupdf, by.x='labels', by.y ='soilplot')
# newlabels <- merge(newlabels, torder, by='trow')
#
# grouporder <- newlabels %>% group_by(clust)  %>%  summarise(thisorder = min(torder))
# grouporder$newgroup <- order(order(grouporder$thisorder))
# newlabels <- merge(newlabels, grouporder, by='clust')
# newgroups <- newlabels$newgroup
# names(newgroups) <- newlabels$labels
# return(newgroups)
# }
# newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
# newlabels <- newlabels[order(newlabels$row),1]
# newtree <- t
# newtree$labels <- newlabels
if (T){
a <- 'flex'
makeplot(a,d,tbeta,k)
}
if (T){
a <- 'ward'
makeplot(a,d,tward,k)
}
if (T){
a <- 'regroup'
makeplotgroup(a,d,t,groups)
}
source('groupplotsummary.R')
source('USNVC_compare_specieslists_loop_by_cluster.R')
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
plotassociations
plotassociations[order(as.numeric(as.character(plotassociations$cluster))),c("cluster", "scientificname")]
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
plotassociations[order(as.numeric(as.character(plotassociations$clust))),c("clust", "scientificname")]
#group parameters ----
beta= -0.25
k = 15
d <- vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)
tbeta <- d %>% flexbeta(beta= beta)
tward <- agnes(d, method = 'ward') %>% as.hclust()
t=tbeta
t=tward
t=dendsort(t)
# dk <- dynamicK(t, d)
# dkward <- dynamicK(tward, d)
# groups <- cutree(t, k = k)
# maxCoreScatter <- dk[dk$nclust %in% k,]$maxcor
# minGap <- (1 - maxCoreScatter) * 3/4
# dyngroups <-
#   cutreeDynamic(t, minClusterSize=1, method = 'hybrid', distM=as.matrix(d),deepSplit=1, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
# groups=dyngroups
groups <- cutree(t, k = k)
groups <- grouporder(t, groups)
# grouporder <- function(t,groups){
# soilplot <- names(d)
# clust <- unname(groups)
# groupdf <- as.data.frame(cbind(soilplot, clust))
# groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
# torder <- as.data.frame(cbind(trow=t$order))
# torder$torder <- row(torder)[,1]
# newlabels <- as.data.frame(cbind(labels=t$labels))
# newlabels$trow <- row(newlabels)[,1]
# newlabels <- merge(newlabels, groupdf, by.x='labels', by.y ='soilplot')
# newlabels <- merge(newlabels, torder, by='trow')
#
# grouporder <- newlabels %>% group_by(clust)  %>%  summarise(thisorder = min(torder))
# grouporder$newgroup <- order(order(grouporder$thisorder))
# newlabels <- merge(newlabels, grouporder, by='clust')
# newgroups <- newlabels$newgroup
# names(newgroups) <- newlabels$labels
# return(newgroups)
# }
# newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
# newlabels <- newlabels[order(newlabels$row),1]
# newtree <- t
# newtree$labels <- newlabels
if (T){
a <- 'flex'
makeplot(a,d,tbeta,k)
}
if (T){
a <- 'ward'
makeplot(a,d,tward,k)
}
if (T){
a <- 'regroup'
makeplotgroup(a,d,t,groups)
}
source('groupplotsummary.R')
source('USNVC_compare_specieslists_loop_by_cluster.R')
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
plotassociations[order(as.numeric(as.character(plotassociations$clust))),c("clust", "scientificname")]
beta= -0
k = 15
d <- vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)
tbeta <- d %>% flexbeta(beta= beta)
tward <- agnes(d, method = 'ward') %>% as.hclust()
t=tbeta
t=tward
t=dendsort(t)
# dk <- dynamicK(t, d)
# dkward <- dynamicK(tward, d)
# groups <- cutree(t, k = k)
# maxCoreScatter <- dk[dk$nclust %in% k,]$maxcor
# minGap <- (1 - maxCoreScatter) * 3/4
# dyngroups <-
#   cutreeDynamic(t, minClusterSize=1, method = 'hybrid', distM=as.matrix(d),deepSplit=1, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
# groups=dyngroups
groups <- cutree(t, k = k)
groups <- grouporder(t, groups)
# grouporder <- function(t,groups){
# soilplot <- names(d)
# clust <- unname(groups)
# groupdf <- as.data.frame(cbind(soilplot, clust))
# groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
# torder <- as.data.frame(cbind(trow=t$order))
# torder$torder <- row(torder)[,1]
# newlabels <- as.data.frame(cbind(labels=t$labels))
# newlabels$trow <- row(newlabels)[,1]
# newlabels <- merge(newlabels, groupdf, by.x='labels', by.y ='soilplot')
# newlabels <- merge(newlabels, torder, by='trow')
#
# grouporder <- newlabels %>% group_by(clust)  %>%  summarise(thisorder = min(torder))
# grouporder$newgroup <- order(order(grouporder$thisorder))
# newlabels <- merge(newlabels, grouporder, by='clust')
# newgroups <- newlabels$newgroup
# names(newgroups) <- newlabels$labels
# return(newgroups)
# }
# newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
# newlabels <- newlabels[order(newlabels$row),1]
# newtree <- t
# newtree$labels <- newlabels
if (T){
a <- 'flex'
makeplot(a,d,tbeta,k)
}
