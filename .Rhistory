distbray <- vegdist(plotdata1, method='bray', binary=FALSE, na.rm=T)# dbray <- as.data.frame(as.matrix(distbray))
distjac <- vegdist(plotdata1, method='jaccard', binary=FALSE, na.rm=T)
distsim <- as.dist(simil(plotdata1,method='Simpson'))
distkulc <- vegdist(plotdata1, method='kulczynski', binary=FALSE, na.rm=T)
tbrayagnes <- distbray %>% agnes(method = 'average')
tbrayflex05 <- distbray %>% flexbeta(beta= -0.05)
tbrayflex10 <- distbray %>% flexbeta(beta= -0.10)
tbrayflex15 <- distbray %>% flexbeta(beta= -0.15)
tbrayflex20 <- distbray %>% flexbeta(beta= -0.20)
tbrayflex25 <- distbray %>% flexbeta(beta= -0.25)
tbrayflex30 <- distbray %>% flexbeta(beta= -0.30)
tbrayflex35 <- distbray %>% flexbeta(beta= -0.35)
tbrayward <- distbray %>% agnes(method = 'ward')
k <- 2
klevel <- 0
ind.upgma <- 0
ind.flex05 <- 0
ind.flex10 <- 0
ind.flex15 <- 0
ind.flex20 <- 0
ind.flex25 <- 0
ind.flex30 <- 0
ind.flex35 <- 0
ind.ward <- 0
clu.upgma <- 0
clu.flex05 <- 0
clu.flex10 <- 0
clu.flex15 <- 0
clu.flex20 <- 0
clu.flex25 <- 0
clu.flex30 <- 0
clu.flex35 <- 0
clu.ward <- 0
timeA = Sys.time()
ind.upgma.1 <- optimclass(plotdata1, stride(8, as.hclust(tbrayagnes)))$sig.spc
Sys.time() - timeA
timeA = Sys.time()
# ind.upgma.1 <- tbrayagnes %>% cutree(k=8)
# ind.upgma.1 <- indval(plotdata1, ind.upgma.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# Sys.time() - timeA
timeA = Sys.time()
for (k in 2:10){
# ind.upgma.1 <- tbrayagnes %>% cutree(k=k)
# ind.flex05.1 <- tbrayflex05 %>% cutree(k=k)
# ind.flex10.1 <- tbrayflex10 %>% cutree(k=k)
# ind.flex15.1 <- tbrayflex15 %>% cutree(k=k)
# ind.flex20.1 <- tbrayflex20 %>% cutree(k=k)
# ind.flex25.1 <- tbrayflex25 %>% cutree(k=k)
# ind.flex30.1 <- tbrayflex30 %>% cutree(k=k)
# ind.flex35.1 <- tbrayflex35 %>% cutree(k=k)
# ind.ward.1 <- tbrayward %>% cutree(k=k)
#
# ind.upgma.1 <- indval(plotdata1, ind.upgma.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex05.1 <- indval(plotdata1, ind.flex05.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex10.1 <- indval(plotdata1, ind.flex10.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex15.1 <- indval(plotdata1, ind.flex15.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex20.1 <- indval(plotdata1, ind.flex20.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex25.1 <- indval(plotdata1, ind.flex25.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex30.1 <- indval(plotdata1, ind.flex30.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.flex35.1 <- indval(plotdata1, ind.flex35.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
# ind.ward.1 <- indval(plotdata1, ind.ward.1) %>% .$indval %>% apply(MARGIN=1, FUN = 'mean') %>% mean()
ind.upgma.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayagnes)))
ind.flex05.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex05)))
ind.flex10.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex10)))
ind.flex15.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex15)))
ind.flex20.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex20)))
ind.flex25.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex25)))
ind.flex30.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex30)))
ind.flex35.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayflex35)))
ind.ward.0 <- optimclass(plotdata1, stride(k, as.hclust(tbrayward)))
ind.upgma.1 <- ind.upgma.0$sig.spc
ind.flex05.1 <- ind.flex05.0$sig.spc
ind.flex10.1 <- ind.flex10.0$sig.spc
ind.flex15.1 <- ind.flex15.0$sig.spc
ind.flex20.1 <- ind.flex20.0$sig.spc
ind.flex25.1 <- ind.flex25.0$sig.spc
ind.flex30.1 <- ind.flex30.0$sig.spc
ind.flex35.1 <- ind.flex35.0$sig.spc
ind.ward.1 <- ind.ward.0$sig.spc
clu.upgma.1 <- ind.upgma.0$sig.clust
clu.flex05.1 <- ind.flex05.0$sig.clust
clu.flex10.1 <- ind.flex10.0$sig.clust
clu.flex15.1 <- ind.flex15.0$sig.clust
clu.flex20.1 <- ind.flex20.0$sig.clust
clu.flex25.1 <- ind.flex25.0$sig.clust
clu.flex30.1 <- ind.flex30.0$sig.clust
clu.flex35.1 <- ind.flex35.0$sig.clust
clu.ward.1 <- ind.ward.0$sig.clust
klevel <- c(klevel, k)
ind.upgma <- c(ind.upgma, ind.upgma.1)
ind.flex05 <- c(ind.flex05, ind.flex05.1)
ind.flex10 <- c(ind.flex10, ind.flex10.1)
ind.flex15 <- c(ind.flex15, ind.flex15.1)
ind.flex20 <- c(ind.flex20, ind.flex20.1)
ind.flex25 <- c(ind.flex25, ind.flex25.1)
ind.flex30 <- c(ind.flex30, ind.flex30.1)
ind.flex35 <- c(ind.flex35, ind.flex35.1)
ind.ward <- c(ind.ward, ind.ward.1)
clu.upgma <- c(clu.upgma, clu.upgma.1)
clu.flex05 <- c(clu.flex05, clu.flex05.1)
clu.flex10 <- c(clu.flex10, clu.flex10.1)
clu.flex15 <- c(clu.flex15, clu.flex15.1)
clu.flex20 <- c(clu.flex20, clu.flex20.1)
clu.flex25 <- c(clu.flex25, clu.flex25.1)
clu.flex30 <- c(clu.flex30, clu.flex30.1)
clu.flex35 <- c(clu.flex35, clu.flex35.1)
clu.ward <- c(clu.ward, clu.ward.1)
}
Sys.time() - timeA
ind.table <- as.data.frame(cbind(klevel,ind.upgma,ind.flex05,ind.flex10,ind.flex15,ind.flex20,ind.flex25,ind.flex30,ind.flex35,ind.ward))
ind.table <- ind.table[-1,]
ind.table <- ind.table %>% mutate()
dni.table <- ind.table[,-1] %>% t() %>% as.data.frame()
dni.table <- dni.table %>% mutate(s2to8 = apply(dni.table[,1:7], MARGIN=1, FUN = 'mean'))
clu.table <- as.data.frame(cbind(klevel,clu.upgma,clu.flex05,clu.flex10,clu.flex15,clu.flex20,clu.flex25,clu.flex30,clu.flex35,clu.ward))
clu.table <- clu.table[-1,]
clu.table <- clu.table %>% mutate()
ulc.table <- clu.table[,-1] %>% t() %>% as.data.frame()
ulc.table <- ulc.table %>% mutate(s2to8 = apply(dni.table[,1:7], MARGIN=1, FUN = 'mean'))
View(clu.table)
View(ulc.table)
View(sil.table)
View(lis.table)
View(dni.table)
View(clu.table)
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.30)
groups <- cutree(t, k = k)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
maxcluster <- max(groupdf$clust)
numberzeros <- nrow(groupdf[(groupdf$clust == 0),])
whichrecords <- which(groupdf$clust == 0)
if (nrow(groupdf[groupdf$clust == 0,]) != 0){
for (i in 1:numberzeros){ #assign all zero clusters to unique cluster number.
groupdf[whichrecords[i],]$clust <- maxcluster+i}}
Com.Sp.groups <- merge(groupdf,  Com.Sp.mean, by='soilplot', all.x=TRUE, all.y = TRUE)
View(Com.Sp.groups)
Com.Sp.groups <- merge(groupdf,  Com.Sp.mean, by='soilplot', all.x=TRUE, all.y = TRUE)
#----
#average spp by cluster
Com.Sp.groups.sum <- aggregate(Com.Sp.groups[,c('Field', 'Shrub', 'Subcanopy','Tree', 'Total')],
by=list(Com.Sp.groups$clust, Com.Sp.groups$Species), FUN='sum')
colnames(Com.Sp.groups.sum) <- c('cluster', 'taxon', 'Field', 'Shrub', 'Subcanopy','Tree', 'Total')
Com.Sp.groups.count <- aggregate(unique(Com.Sp.groups[c('clust', 'soilplot')])$soilplot,
by=list(unique(Com.Sp.groups[c('clust', 'soilplot')])$clust), FUN='length')
colnames(Com.Sp.groups.count) <- c('cluster', 'count')
Com.Sp.groups.mean <- merge(Com.Sp.groups.sum, Com.Sp.groups.count, by = 'cluster')
Com.Sp.groups.mean[,c('Field', 'Shrub', 'Subcanopy','Tree', 'Total')] <- Com.Sp.groups.mean[,c('Field', 'Shrub', 'Subcanopy','Tree', 'Total')]/Com.Sp.groups.mean$count
rm(Com.Sp.groups.sum, Com.Sp.groups.count)
#frequency spp by cluster
Com.Sp.prefreq <- Com.Sp.groups
Com.Sp.prefreq$Total <- ifelse(Com.Sp.prefreq$Total >0, 1,0)
Com.Sp.freq.sum <- aggregate(Com.Sp.prefreq$Total,
by=list(Com.Sp.prefreq$clust, Com.Sp.prefreq$Species), FUN='sum')
colnames(Com.Sp.freq.sum) <- c('cluster', 'taxon', 'freq')
Com.Sp.groups.count <- aggregate(unique(Com.Sp.prefreq[c('clust', 'soilplot')])$soilplot,
by=list(unique(Com.Sp.prefreq[c('clust', 'soilplot')])$clust), FUN='length')
colnames(Com.Sp.groups.count) <- c('cluster', 'count')
Com.Sp.groups.freq <- merge(Com.Sp.freq.sum, Com.Sp.groups.count, by = 'cluster')
Com.Sp.groups.freq$freq <- Com.Sp.groups.freq$freq/Com.Sp.groups.freq$count*100
Com.Sp.groups.mean <- merge(Com.Sp.groups.mean, Com.Sp.groups.freq[,c('cluster', 'taxon', 'freq')], by = c('cluster', 'taxon'))
Com.Sp.groups.mean$freqcover <- (Com.Sp.groups.mean$Total+Com.Sp.groups.mean$freq*3)/4
rm(Com.Sp.freq.sum, Com.Sp.groups.count)
#Affinity analysis
Com.Sp.groups.spptotals <- aggregate(Com.Sp.groups.mean[,c('freqcover')],
by=list(Com.Sp.groups.mean$taxon), FUN='sum')
colnames(Com.Sp.groups.spptotals) <- c('taxon', 'Totalfreqcover')
Com.Sp.groups.mean <- merge(Com.Sp.groups.mean, Com.Sp.groups.spptotals, by = 'taxon')
Com.Sp.groups.mean$affinity <- (Com.Sp.groups.mean$freq*3 + Com.Sp.groups.mean$freqcover/(Com.Sp.groups.mean$Totalfreqcover+0.0001)*100)/4
#calculate dominant stratum by species in group.
Com.Sp.groups.mean$stratum <- round(
( (Com.Sp.groups.mean$Tree)^2*3+
(Com.Sp.groups.mean$Subcanopy)^2*2.5+
(Com.Sp.groups.mean$Shrub)^2*2+
(Com.Sp.groups.mean$Field)^2*1
)/
( (Com.Sp.groups.mean$Tree)^2+
(Com.Sp.groups.mean$Subcanopy)^2+
(Com.Sp.groups.mean$Shrub)^2+
(Com.Sp.groups.mean$Field)^2
+0.000000001),0)
#Classify Structure
Com.Sp.Agg.groups <- merge(groupdf,  Com.Sp.Agg, by='soilplot', all.x=TRUE, all.y = TRUE)
Com.Sp.Agg.groups.sum <- aggregate(Com.Sp.Agg.groups$Total, by=list(Com.Sp.Agg.groups$clust, Com.Sp.Agg.groups$Simple), FUN='sum')
colnames(Com.Sp.Agg.groups.sum) <- c('cluster', 'simple', 'Total')
Com.Sp.Agg.count <- aggregate(unique(Com.Sp.Agg.groups[c('clust', 'soilplot')])$soilplot,
by=list(unique(Com.Sp.Agg.groups[c('clust', 'soilplot')])$clust), FUN='length')
colnames(Com.Sp.Agg.count) <- c('cluster', 'count')
Com.Sp.Agg.groups.mean <- merge(Com.Sp.Agg.groups.sum, Com.Sp.Agg.count, by = 'cluster')
Com.Sp.Agg.groups.mean$Total <- Com.Sp.Agg.groups.mean$Total/(Com.Sp.Agg.groups.mean$count+0.0001)
rm(Com.Sp.Agg.groups.sum, Com.Sp.Agg.count)
listofsimple <- c("DeciduousShrub", "DeciduousTree", "EvergreenShrub", "EvergreenTree", "Forb", "Graminoid", "Nonvascular")
cluster = unique(Com.Sp.Agg.groups.mean$cluster)
Com.Structure <- as.data.frame(cluster)
for (i in 1:length(listofsimple)){
x <- Com.Sp.Agg.groups.mean[Com.Sp.Agg.groups.mean$simple %in% listofsimple[i],c('cluster','Total')]
Com.Structure <- merge(Com.Structure,x, by='cluster', all.x = TRUE)
Com.Structure$Total <- ifelse(is.na(Com.Structure$Total),0,Com.Structure$Total)
colnames(Com.Structure)[colnames(Com.Structure)=="Total"] <- listofsimple[i]
}
Com.Structure$Structure <-ifelse(Com.Structure$EvergreenTree + Com.Structure$DeciduousTree >= 60,'Forestland',
ifelse(Com.Structure$EvergreenTree + Com.Structure$DeciduousTree >= 25,'Woodland',
ifelse(Com.Structure$EvergreenShrub + Com.Structure$DeciduousShrub >= 25,'Shrubland',
ifelse(Com.Structure$Forb + Com.Structure$Graminoid >= 25,'Herbland',
ifelse(Com.Structure$Nonvascular >= 25,'Mossland',
ifelse(Com.Structure$EvergreenTree + Com.Structure$DeciduousTree +
Com.Structure$EvergreenShrub + Com.Structure$DeciduousShrub +
Com.Structure$Forb + Com.Structure$Graminoid +
Com.Structure$Nonvascular >= 1,'Sparse','Barren'))))))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Forestland' &
Com.Structure$EvergreenTree/(Com.Structure$EvergreenTree+Com.Structure$DeciduousTree)*100 >=75, 'Evergreen Forest',
ifelse(Com.Structure$Structure %in% 'Forestland' &
Com.Structure$EvergreenTree/(Com.Structure$EvergreenTree+Com.Structure$DeciduousTree)*100 >=25, 'Mixed Forest',
ifelse(Com.Structure$Structure %in% 'Forestland', 'Deciduous Forest',Com.Structure$Structure)))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Shrubland' &
Com.Structure$EvergreenShrub/(Com.Structure$EvergreenShrub+Com.Structure$DeciduousShrub)*100 >=50, 'Evergreen Shrubland',
ifelse(Com.Structure$Structure %in% 'Shrubland', 'Deciduous Shrubland',Com.Structure$Structure))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Herbland' &
Com.Structure$Graminoid/(Com.Structure$Graminoid+Com.Structure$Forb)*100 >=50, 'Grassland',
ifelse(Com.Structure$Structure %in% 'Herbland', 'Meadow',Com.Structure$Structure))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Grassland' &
Com.Structure$EvergreenTree+Com.Structure$DeciduousTree >= 10, 'Treed Grassland',
ifelse(Com.Structure$Structure %in% 'Grassland' &
Com.Structure$EvergreenShrub+Com.Structure$DeciduousShrub >= 10, 'Shrubby Grassland',Com.Structure$Structure))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Meadow' &
Com.Structure$EvergreenTree+Com.Structure$DeciduousTree >= 10, 'Treed Meadow',
ifelse(Com.Structure$Structure %in% 'Meadow' &
Com.Structure$EvergreenShrub+Com.Structure$DeciduousShrub >= 10, 'Shrubby Meadow',Com.Structure$Structure))
#group wetness
Com.Sp.Wet.groups <- merge(groupdf,  Com.Sp.Agg.wet, by='soilplot', all.x=TRUE, all.y = TRUE)
Com.Sp.Wet.groups <- Com.Sp.Wet.groups[Com.Sp.Wet.groups$Simple %in% 'Wet',]
Com.Sp.Wet.groups <- aggregate(Com.Sp.Wet.groups$Total, by=list(Com.Sp.Wet.groups$clust), FUN='mean')
colnames(Com.Sp.Wet.groups) <- c('cluster','Wetness')
Com.Structure <- merge(Com.Structure, Com.Sp.Wet.groups, by='cluster', all.x = TRUE)
Com.Structure$WetStructure <-
ifelse(Com.Structure$Wetness >= 50, paste('Wet', Com.Structure$Structure), Com.Structure$Structure)
#----
#rank
Com.Sp.groups.mean<- merge(Com.Sp.groups.mean, Com.Structure[,c('cluster','Structure')], by='cluster', all.x = TRUE)
Com.Sp.groups.mean$overunder <- ifelse(Com.Sp.groups.mean$stratum == 3, 1,0)
#rank
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(ranks = order(order(Total, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(freqranks = order(order(freqcover, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(affranks = order(order(affinity, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster, stratum) %>%
dplyr::mutate(subranks = order(order(freqcover, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster, overunder) %>%
dplyr::mutate(overunderranks = order(order(freqcover, decreasing=TRUE)))
Com.rank <- subset(Com.Sp.groups.mean, !stratum %in% 0)
Com.rankA <- subset(Com.rank,
((grepl('Forest',Structure))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2,3))|(overunderranks <= 1))#forced understory
#(((freqranks <= 3 | affranks <= 1) & stratum %in% c(1,2,3))|(subranks <= 1 & stratum %in% c(2)))#can be all overstory
)|
((grepl('Woodland',Structure))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2,3))|(overunderranks <= 1))
)|
((grepl('Shrubland',Structure))&
(((freqranks <= 3 | affranks <= 1) & stratum %in% c(1,2))|(subranks <= 1 & stratum %in% c(2)))
)|
((Structure %in% c('Treed Grassland', 'Treed Meadow'))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2,3))|(subranks <= 1 & stratum %in% c(1,3)))
)|
((Structure %in% c('Shrubby Grassland', 'Shrubby Meadow'))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2))|(subranks <= 1 & stratum %in% c(1,2)))
)|
((Structure %in% c('Grassland', 'Meadow'))&
(((freqranks <= 3 | affranks <= 1) & stratum %in% c(1))|(subranks <= 1 & stratum %in% c(1)))
))
Com.rankB <- subset(Com.rank,
affranks <= 2|(subranks <= 1 & freqranks <= 5)|(subranks <= 1 & affranks <= 5))
Com.Ass <- Com.rankA
Com.Ass <- Com.Ass[,c('cluster', 'taxon', 'stratum', 'freqcover')]
Com.Ass <-
Com.Ass %>%
dplyr::group_by(cluster, stratum) %>%
dplyr::mutate(ranks = order(order(freqcover, decreasing=FALSE)))
Com.Ass$ranks <- Com.Ass$stratum*10+Com.Ass$ranks
Com.Ass <-
Com.Ass %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(ranks = order(order(ranks, decreasing=TRUE)))
Com.Structure$association <- ""
Com.Ass$taxon <- as.character(Com.Ass$taxon)
nclust <- unique(Com.Ass$cluster)
for (i in 1:length(nclust)){
Com.B <- subset(Com.Ass, cluster %in% nclust[i])
nrank <- length(unique(Com.B$ranks))
assname <- ""
for (j in 1:nrank){
assname <- ifelse(j == 1,Com.B[Com.B$ranks %in% j,]$taxon,
ifelse(Com.B[Com.B$ranks %in% j,]$stratum == Com.B[Com.B$ranks %in% (j-1),]$stratum,
paste0(assname, '-',Com.B[Com.B$ranks %in% j,]$taxon),paste0(assname, '/',Com.B[Com.B$ranks %in% j,]$taxon)))
}
Com.Structure[Com.Structure$cluster %in% nclust[i],]$association <- assname
}
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
selectclust <- groupdf[groupdf$clust %in% 2,]$soilplot
plotdata2 <- plotdata[rownames(plotdata) %in% selectclust,]
k=4
d <- ((vegdist(plotdata2, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.2)
groups <- cutree(t, k = k)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
maxcluster <- max(groupdf$clust)
numberzeros <- nrow(groupdf[(groupdf$clust == 0),])
whichrecords <- which(groupdf$clust == 0)
if (nrow(groupdf[groupdf$clust == 0,]) != 0){
for (i in 1:numberzeros){ #assign all zero clusters to unique cluster number.
groupdf[whichrecords[i],]$clust <- maxcluster+i}}
Com.Sp.groups <- merge(groupdf,  Com.Sp.mean, by='soilplot', all.x=TRUE, all.y = TRUE)
#average spp by cluster
Com.Sp.groups.sum <- aggregate(Com.Sp.groups[,c('Field', 'Shrub', 'Subcanopy','Tree', 'Total')],
by=list(Com.Sp.groups$clust, Com.Sp.groups$Species), FUN='sum')
colnames(Com.Sp.groups.sum) <- c('cluster', 'taxon', 'Field', 'Shrub', 'Subcanopy','Tree', 'Total')
Com.Sp.groups.count <- aggregate(unique(Com.Sp.groups[c('clust', 'soilplot')])$soilplot,
by=list(unique(Com.Sp.groups[c('clust', 'soilplot')])$clust), FUN='length')
colnames(Com.Sp.groups.count) <- c('cluster', 'count')
Com.Sp.groups.mean <- merge(Com.Sp.groups.sum, Com.Sp.groups.count, by = 'cluster')
Com.Sp.groups.mean[,c('Field', 'Shrub', 'Subcanopy','Tree', 'Total')] <- Com.Sp.groups.mean[,c('Field', 'Shrub', 'Subcanopy','Tree', 'Total')]/Com.Sp.groups.mean$count
rm(Com.Sp.groups.sum, Com.Sp.groups.count)
#frequency spp by cluster
Com.Sp.prefreq <- Com.Sp.groups
Com.Sp.prefreq$Total <- ifelse(Com.Sp.prefreq$Total >0, 1,0)
Com.Sp.freq.sum <- aggregate(Com.Sp.prefreq$Total,
by=list(Com.Sp.prefreq$clust, Com.Sp.prefreq$Species), FUN='sum')
colnames(Com.Sp.freq.sum) <- c('cluster', 'taxon', 'freq')
Com.Sp.groups.count <- aggregate(unique(Com.Sp.prefreq[c('clust', 'soilplot')])$soilplot,
by=list(unique(Com.Sp.prefreq[c('clust', 'soilplot')])$clust), FUN='length')
colnames(Com.Sp.groups.count) <- c('cluster', 'count')
Com.Sp.groups.freq <- merge(Com.Sp.freq.sum, Com.Sp.groups.count, by = 'cluster')
Com.Sp.groups.freq$freq <- Com.Sp.groups.freq$freq/Com.Sp.groups.freq$count*100
Com.Sp.groups.mean <- merge(Com.Sp.groups.mean, Com.Sp.groups.freq[,c('cluster', 'taxon', 'freq')], by = c('cluster', 'taxon'))
Com.Sp.groups.mean$freqcover <- (Com.Sp.groups.mean$Total+Com.Sp.groups.mean$freq*3)/4
rm(Com.Sp.freq.sum, Com.Sp.groups.count)
#Affinity analysis
Com.Sp.groups.spptotals <- aggregate(Com.Sp.groups.mean[,c('freqcover')],
by=list(Com.Sp.groups.mean$taxon), FUN='sum')
colnames(Com.Sp.groups.spptotals) <- c('taxon', 'Totalfreqcover')
Com.Sp.groups.mean <- merge(Com.Sp.groups.mean, Com.Sp.groups.spptotals, by = 'taxon')
Com.Sp.groups.mean$affinity <- (Com.Sp.groups.mean$freq*3 + Com.Sp.groups.mean$freqcover/(Com.Sp.groups.mean$Totalfreqcover+0.0001)*100)/4
#calculate dominant stratum by species in group.
Com.Sp.groups.mean$stratum <- round(
( (Com.Sp.groups.mean$Tree)^2*3+
(Com.Sp.groups.mean$Subcanopy)^2*2.5+
(Com.Sp.groups.mean$Shrub)^2*2+
(Com.Sp.groups.mean$Field)^2*1
)/
( (Com.Sp.groups.mean$Tree)^2+
(Com.Sp.groups.mean$Subcanopy)^2+
(Com.Sp.groups.mean$Shrub)^2+
(Com.Sp.groups.mean$Field)^2
+0.000000001),0)
#Classify Structure
Com.Sp.Agg.groups <- merge(groupdf,  Com.Sp.Agg, by='soilplot', all.x=TRUE, all.y = TRUE)
Com.Sp.Agg.groups.sum <- aggregate(Com.Sp.Agg.groups$Total, by=list(Com.Sp.Agg.groups$clust, Com.Sp.Agg.groups$Simple), FUN='sum')
colnames(Com.Sp.Agg.groups.sum) <- c('cluster', 'simple', 'Total')
Com.Sp.Agg.count <- aggregate(unique(Com.Sp.Agg.groups[c('clust', 'soilplot')])$soilplot,
by=list(unique(Com.Sp.Agg.groups[c('clust', 'soilplot')])$clust), FUN='length')
colnames(Com.Sp.Agg.count) <- c('cluster', 'count')
Com.Sp.Agg.groups.mean <- merge(Com.Sp.Agg.groups.sum, Com.Sp.Agg.count, by = 'cluster')
Com.Sp.Agg.groups.mean$Total <- Com.Sp.Agg.groups.mean$Total/(Com.Sp.Agg.groups.mean$count+0.0001)
rm(Com.Sp.Agg.groups.sum, Com.Sp.Agg.count)
listofsimple <- c("DeciduousShrub", "DeciduousTree", "EvergreenShrub", "EvergreenTree", "Forb", "Graminoid", "Nonvascular")
cluster = unique(Com.Sp.Agg.groups.mean$cluster)
Com.Structure <- as.data.frame(cluster)
for (i in 1:length(listofsimple)){
x <- Com.Sp.Agg.groups.mean[Com.Sp.Agg.groups.mean$simple %in% listofsimple[i],c('cluster','Total')]
Com.Structure <- merge(Com.Structure,x, by='cluster', all.x = TRUE)
Com.Structure$Total <- ifelse(is.na(Com.Structure$Total),0,Com.Structure$Total)
colnames(Com.Structure)[colnames(Com.Structure)=="Total"] <- listofsimple[i]
}
Com.Structure$Structure <-ifelse(Com.Structure$EvergreenTree + Com.Structure$DeciduousTree >= 60,'Forestland',
ifelse(Com.Structure$EvergreenTree + Com.Structure$DeciduousTree >= 25,'Woodland',
ifelse(Com.Structure$EvergreenShrub + Com.Structure$DeciduousShrub >= 25,'Shrubland',
ifelse(Com.Structure$Forb + Com.Structure$Graminoid >= 25,'Herbland',
ifelse(Com.Structure$Nonvascular >= 25,'Mossland',
ifelse(Com.Structure$EvergreenTree + Com.Structure$DeciduousTree +
Com.Structure$EvergreenShrub + Com.Structure$DeciduousShrub +
Com.Structure$Forb + Com.Structure$Graminoid +
Com.Structure$Nonvascular >= 1,'Sparse','Barren'))))))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Forestland' &
Com.Structure$EvergreenTree/(Com.Structure$EvergreenTree+Com.Structure$DeciduousTree)*100 >=75, 'Evergreen Forest',
ifelse(Com.Structure$Structure %in% 'Forestland' &
Com.Structure$EvergreenTree/(Com.Structure$EvergreenTree+Com.Structure$DeciduousTree)*100 >=25, 'Mixed Forest',
ifelse(Com.Structure$Structure %in% 'Forestland', 'Deciduous Forest',Com.Structure$Structure)))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Shrubland' &
Com.Structure$EvergreenShrub/(Com.Structure$EvergreenShrub+Com.Structure$DeciduousShrub)*100 >=50, 'Evergreen Shrubland',
ifelse(Com.Structure$Structure %in% 'Shrubland', 'Deciduous Shrubland',Com.Structure$Structure))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Herbland' &
Com.Structure$Graminoid/(Com.Structure$Graminoid+Com.Structure$Forb)*100 >=50, 'Grassland',
ifelse(Com.Structure$Structure %in% 'Herbland', 'Meadow',Com.Structure$Structure))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Grassland' &
Com.Structure$EvergreenTree+Com.Structure$DeciduousTree >= 10, 'Treed Grassland',
ifelse(Com.Structure$Structure %in% 'Grassland' &
Com.Structure$EvergreenShrub+Com.Structure$DeciduousShrub >= 10, 'Shrubby Grassland',Com.Structure$Structure))
Com.Structure$Structure <-
ifelse(Com.Structure$Structure %in% 'Meadow' &
Com.Structure$EvergreenTree+Com.Structure$DeciduousTree >= 10, 'Treed Meadow',
ifelse(Com.Structure$Structure %in% 'Meadow' &
Com.Structure$EvergreenShrub+Com.Structure$DeciduousShrub >= 10, 'Shrubby Meadow',Com.Structure$Structure))
#group wetness
Com.Sp.Wet.groups <- merge(groupdf,  Com.Sp.Agg.wet, by='soilplot', all.x=TRUE, all.y = TRUE)
Com.Sp.Wet.groups <- Com.Sp.Wet.groups[Com.Sp.Wet.groups$Simple %in% 'Wet',]
Com.Sp.Wet.groups <- aggregate(Com.Sp.Wet.groups$Total, by=list(Com.Sp.Wet.groups$clust), FUN='mean')
colnames(Com.Sp.Wet.groups) <- c('cluster','Wetness')
Com.Structure <- merge(Com.Structure, Com.Sp.Wet.groups, by='cluster', all.x = TRUE)
Com.Structure$WetStructure <-
ifelse(Com.Structure$Wetness >= 50, paste('Wet', Com.Structure$Structure), Com.Structure$Structure)
#----
#rank
Com.Sp.groups.mean<- merge(Com.Sp.groups.mean, Com.Structure[,c('cluster','Structure')], by='cluster', all.x = TRUE)
Com.Sp.groups.mean$overunder <- ifelse(Com.Sp.groups.mean$stratum == 3, 1,0)
#rank
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(ranks = order(order(Total, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(freqranks = order(order(freqcover, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(affranks = order(order(affinity, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster, stratum) %>%
dplyr::mutate(subranks = order(order(freqcover, decreasing=TRUE)))
Com.Sp.groups.mean <-
Com.Sp.groups.mean %>%
dplyr::group_by(cluster, overunder) %>%
dplyr::mutate(overunderranks = order(order(freqcover, decreasing=TRUE)))
Com.rank <- subset(Com.Sp.groups.mean, !stratum %in% 0)
Com.rankA <- subset(Com.rank,
((grepl('Forest',Structure))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2,3))|(overunderranks <= 1))#forced understory
#(((freqranks <= 3 | affranks <= 1) & stratum %in% c(1,2,3))|(subranks <= 1 & stratum %in% c(2)))#can be all overstory
)|
((grepl('Woodland',Structure))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2,3))|(overunderranks <= 1))
)|
((grepl('Shrubland',Structure))&
(((freqranks <= 3 | affranks <= 1) & stratum %in% c(1,2))|(subranks <= 1 & stratum %in% c(2)))
)|
((Structure %in% c('Treed Grassland', 'Treed Meadow'))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2,3))|(subranks <= 1 & stratum %in% c(1,3)))
)|
((Structure %in% c('Shrubby Grassland', 'Shrubby Meadow'))&
(((freqranks <= 2 | affranks <= 1) & stratum %in% c(1,2))|(subranks <= 1 & stratum %in% c(1,2)))
)|
((Structure %in% c('Grassland', 'Meadow'))&
(((freqranks <= 3 | affranks <= 1) & stratum %in% c(1))|(subranks <= 1 & stratum %in% c(1)))
))
Com.rankB <- subset(Com.rank,
affranks <= 2|(subranks <= 1 & freqranks <= 5)|(subranks <= 1 & affranks <= 5))
Com.Ass <- Com.rankA
Com.Ass <- Com.Ass[,c('cluster', 'taxon', 'stratum', 'freqcover')]
Com.Ass <-
Com.Ass %>%
dplyr::group_by(cluster, stratum) %>%
dplyr::mutate(ranks = order(order(freqcover, decreasing=FALSE)))
Com.Ass$ranks <- Com.Ass$stratum*10+Com.Ass$ranks
Com.Ass <-
Com.Ass %>%
dplyr::group_by(cluster) %>%
dplyr::mutate(ranks = order(order(ranks, decreasing=TRUE)))
Com.Structure$association <- ""
Com.Ass$taxon <- as.character(Com.Ass$taxon)
nclust <- unique(Com.Ass$cluster)
for (i in 1:length(nclust)){
Com.B <- subset(Com.Ass, cluster %in% nclust[i])
nrank <- length(unique(Com.B$ranks))
assname <- ""
for (j in 1:nrank){
assname <- ifelse(j == 1,Com.B[Com.B$ranks %in% j,]$taxon,
ifelse(Com.B[Com.B$ranks %in% j,]$stratum == Com.B[Com.B$ranks %in% (j-1),]$stratum,
paste0(assname, '-',Com.B[Com.B$ranks %in% j,]$taxon),paste0(assname, '/',Com.B[Com.B$ranks %in% j,]$taxon)))
}
Com.Structure[Com.Structure$cluster %in% nclust[i],]$association <- assname
}
Com.Structure[order(as.numeric(as.character(Com.Structure$cluster))),c("cluster", "association", "WetStructure")]
