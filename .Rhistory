a1 <- 'flex20'
k=10
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.20)
makeplot(a1,d,t1,k)
}
names(d)
labels = names(d)
sil <- (t %>% cutree(k=k) %>% silhouette(distbray))
sil <- as.data.frame(cbind(labels = labels, cluster=sil[,1], sil0=sil[,3]))
sil$sil0 <- as.numeric(sil$sil0)
sil <- sil %>% group_by(cluster) %>% mutate(sil.mean = mean(sil0))
sil0 <- sil[,c('cluster','sil.mean')]
labels = names(d)
sil <- (t %>% cutree(k=k) %>% silhouette(d))
sil <- as.data.frame(cbind(labels = labels, cluster=sil[,1], sil0=sil[,3]))
sil$sil0 <- as.numeric(sil$sil0)
sil <- sil %>% group_by(cluster) %>% mutate(sil.mean = mean(sil0))
sil0 <- sil[,c('cluster','sil.mean')]
colnames(sil0) <- c(paste0('cluster.',k),paste0('sil.',k))
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
k = 2
for(k in 2:10){#k=2
labels = names(d)
sil <- (t %>% cutree(k=k) %>% silhouette(d))
sil <- as.data.frame(cbind(labels = labels, cluster=sil[,1], sil0=sil[,3]))
sil$sil0 <- as.numeric(sil$sil0)
sil <- sil %>% group_by(cluster) %>% mutate(sil.mean = mean(sil0))
sil0 <- sil[,c('cluster','sil.mean')]
colnames(sil0) <- c(paste0('cluster.',k),paste0('sil.',k))
if(k==2){sil.table = cbind(labels = labels, sil0)}else{sil.table = cbind(sil.table,sil0)}
}
sil.table <- sil.table[c(1,
unique(floor(2:ncol(sil.table)/2)*2)
,
unique(floor(2:ncol(sil.table)/2)*2)+1
)]
View(ind.table)
View(lis.table)
View(dni.table)
View(dnilc.table)
View(clu.table)
View(clind.table)
View(clu.table)
View(clind.table)
View(dnilc.table)
ind <- optimclass(plotdata1, stride(k, as.hclust(t)))
ind <- optimclass(plotdata, stride(k, as.hclust(t)))
View(ind)
kmeans(d, centers = ngroups)
kmeans(d, centers = ngroups)$cluster
source('clusterfunctions.R')
a1 <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.20)
makeplot(a1,d,t1,k)
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.15)
k = 4
optind <- optpart::optindval(plotdata, cutree(t, k = k))
optind
source('clusterfunctions.R')
a1 <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.20)
makeplot(a1,d,t1,k)
optind$clustering
groups = optind$clustering
source('clusterfunctions.R')
a1 <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.20)
makeplot(a1,d,t1,k)
groups
order.dendrogram(groups)
order.dendrogram(as.hclust(newtree),groups)
order.dendrogram(as.hclust(newtree))
order.dendrogram(as.hclust(t))
order.dendrogram(as.dendrogram(t))
groups[order.dendrogram(as.dendrogram(t))]
source('clusterfunctions.R')
a1 <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.20)
makeplot(a1,d,t1,k)
filename <- paste0('output/Vegplot_',a,'.png')
t <- as.hclust(t)
#make cuts and reformat dendrogram
ngroups=k
#groups <- cutree(t, k = ngroups)
#groups <- kmeans(d, centers = ngroups)$cluster
groups = optind$clustering
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.20)
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
filename <- paste0('output/Vegplot_',a,'.png')
t <- as.hclust(t)
#make cuts and reformat dendrogram
ngroups=k
#groups <- cutree(t, k = ngroups)
#groups <- kmeans(d, centers = ngroups)$cluster
groups = optind$clustering
soilplot <- names(d)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
maxcluster <- max(groupdf$clust)
numberzeros <- nrow(groupdf[(groupdf$clust == 0),])
whichrecords <- which(groupdf$clust == 0)
if (nrow(groupdf[groupdf$clust == 0,]) != 0){
for (i in 1:numberzeros){ #assign all zero clusters to unique cluster number.
groupdf[whichrecords[i],]$clust <- maxcluster+i}}
newlabels <- t$labels
newlabels <- as.data.frame(newlabels)
newlabels$row <- row(newlabels)
newlabels <- merge(newlabels, groupdf, by.x='newlabels', by.y ='soilplot')
newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
newlabels <- newlabels[order(newlabels$row),1]
newtree <- t
newtree$labels <- newlabels
dend1 <- color_branches(as.hclust(newtree), clusters = groups[order.dendrogram(as.dendrogram(t))])
newtree <- as.dendrogram(t)
newtree$labels <- newlabels
dend1 <- color_branches(as.hclust(newtree), clusters = groups[order.dendrogram(as.dendrogram(t))])
dend1 <- color_branches(newtree, clusters = groups[order.dendrogram(as.dendrogram(t))])
newtree
dend1 <- color_branches(t, clusters = groups[order.dendrogram(as.dendrogram(t))])
newtree <- t
newtree$labels <- newlabels
dend1 <- color_branches(as.hclust(newtree), clusters = groups[order.dendrogram(as.dendrogram(t))])
dend1 <- color_branches(as.dendrogram(as.hclust(newtree)), clusters = groups[order.dendrogram(as.dendrogram(t))])
dend1 <- color_labels(dend1, k = ngroups)
#load clustering functions ----
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
get_leaves_branches_col(dend1)
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
dend1 <- color_branches(as.dendrogram(as.hclust(newtree)), clusters = groups[order.dendrogram(as.dendrogram(t))], groupLabels = TRUE)
cutreeDynamic(t)
cutreeDynamic(t, minClusterSize = 2, distM = d)
distM
d
cutreeDynamic(t, minClusterSize = 2, distM = as.dist(d))
cutreeDynamic(t, minClusterSize = 2, distM = as.matrix(d))
cutreeDynamicTree(t)
cutreeDynamicTree(t, minModuleSize = 2)
cutreeDynamicTree(as.hclust(t), minModuleSize = 2)
cutreeDynamicTree(as.dendrogram(as.hclust(t)), minModuleSize = 2)
cutreeHybrid(t, minClusterSize = 2, distM = as.matrix(d))
groups = cutreeHybrid(t, minClusterSize = 2, distM = as.matrix(d))
groups$labels
groups$mergeDiagnostics
groups = cutreeHybrid(t, minClusterSize = 2, distM = as.matrix(d))$labels
groups
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
cutreeDynamicTree   (as.dendrogram(as.hclust(t)), minModuleSize = 2)
dynamicTreeCut::cutreeDynamicTree   ((t), minModuleSize = 2)
dynamicTreeCut::cutreeDynamicTree   ((t))
t
cutreeDynamicTree(as.hclust(t))
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d), deepSplit=4, maxCoreScatter=NULL, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
cutreeHybrid(t, minClusterSize = 2, distM = as.matrix(d))$labels
cutreeHybrid(t, minClusterSize = 3, distM = as.matrix(d))$labels
maxCoreScatter <- 0.99
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=4, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.99
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 0
maxCoreScatter <- 0.99
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 0
maxCoreScatter <- 0.5
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 0
maxCoreScatter <- 0.75
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 0
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.95
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 0
maxCoreScatter <- 0.95
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 0
maxCoreScatter <- 0.64
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.64
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.2
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.45
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.45
minGap <- (1 - maxCoreScatter) * 3/4
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)$labels
cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
deepSplit <- 4
maxCoreScatter <- 0.64
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
#load clustering functions ----
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
deepSplit <- 4
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=NULL, maxCoreScatter=maxCoreScatter, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- 4
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- 4
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=NULL, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- 4
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=NULL, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- 1
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=NULL, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- 0
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=NULL, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- -1
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=NULL, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
deepSplit <- 8
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=NULL, minGap=NULL, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=TRUE, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=F, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
groups <- cutreeDynamic(t, minClusterSize=3, method="hybrid", distM=as.matrix(d),
deepSplit=NULL, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
minGap
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=NULL, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
groups
unique(groups)
length(unique(groups))
deepSplit <- 4
maxCoreScatter <- 0.6
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 4
maxCoreScatter <- 0.58
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 4
maxCoreScatter <- 0.56
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 4
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 0
maxCoreScatter <- 0.55
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 0
maxCoreScatter <- 0.50
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeHybrid(t, minClusterSize=3, distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
groups
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 0
maxCoreScatter <- 0.6
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 0
maxCoreScatter <- 0.7
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 0
maxCoreScatter <- 0.65
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 0
maxCoreScatter <- 0.61
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
deepSplit <- 4
maxCoreScatter <- 0.61
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
length(unique(groups))
#load clustering functions ----
source('clusterfunctions.R')
a <- 'flex20'
k=4
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t <- flexbeta(d, beta= -0.20)
makeplot(a,d,t,k)
i=2
maxCoreScatter <- i/100
minGap <- (1 - maxCoreScatter) * 3/4
maxCoreScatter
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
maxcore.table0
i=2
maxCoreScatter <- i/100
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
maxcore.table0
deepSplit <- 4
maxCoreScatter <- 0.61
minGap <- (1 - maxCoreScatter) * 3/4
for(i in 1:100){#i=2
maxCoreScatter <- i/100
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
if(i==1){maxcore.table <- maxcore.table0}else{maxcore.table <- rbind(maxcore.table, maxcore.table0)}
}
View(maxcore.table)
deepSplit <- 0
maxCoreScatter <- 0.61
minGap <- (1 - maxCoreScatter) * 3/4
for(i in 1:100){#i=2
maxCoreScatter <- i/100
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
if(i==1){maxcore.table <- maxcore.table0}else{maxcore.table <- rbind(maxcore.table, maxcore.table0)}
}
deepSplit <- 0
maxCoreScatter <- 0.61
minGap <- (1 - maxCoreScatter) * 3/4
for(i in 1:200){#i=2
maxCoreScatter <- i/200
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
if(i==1){maxcore.table <- maxcore.table0}else{maxcore.table <- rbind(maxcore.table, maxcore.table0)}
}
deepSplit <- 1
maxCoreScatter <- 0.61
minGap <- (1 - maxCoreScatter) * 3/4
for(i in 1:300){#i=2
maxCoreScatter <- i/300
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
if(i==1){maxcore.table <- maxcore.table0}else{maxcore.table <- rbind(maxcore.table, maxcore.table0)}
}
for(i in 1:400){#i=2
maxCoreScatter <- i/400
minGap <- (1 - maxCoreScatter) * 3/4
groups <- cutreeDynamic(t, minClusterSize=3, method = 'hybrid', distM=as.matrix(d),
deepSplit=deepSplit, maxCoreScatter=maxCoreScatter, minGap=minGap, maxAbsCoreScatter=NULL, minAbsGap=NULL)
nclust = length(unique(groups))
maxcore.table0 = as.data.frame(cbind(maxcor=maxCoreScatter, nclust))
if(i==1){maxcore.table <- maxcore.table0}else{maxcore.table <- rbind(maxcore.table, maxcore.table0)}
}
maxcore.table <-  maxcore.table %>% group_by(nclust) %>% summarise(maxcor = mean(maxcor))
